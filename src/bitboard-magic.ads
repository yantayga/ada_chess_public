with Board; use Board;
with BitBoard;

package BitBoard.Magic with SPARK_Mode => On is

   pragma Preelaborate;

   --  All places not located at A column
   NotACol : constant BitBoard := 16#FEFEFEFEFEFEFEFE#;
   --  All places not located at H column
   NotHCol : constant BitBoard := 16#7F7F7F7F7F7F7F7F#;
   --  All places not located at A and B columns
   NotABCol : constant BitBoard := 16#FCFCFCFCFCFCFCFC#;
   --  All places not located at H and G columns
   NotGHCol : constant BitBoard := 16#3F3F3F3F3F3F3F3F#;

   PawnAttacks : array (Side'Range, SquareIndex'Range) of BitBoard;

   KingMoves : array (SquareIndex'Range) of BitBoard;

   KnightMoves : array (SquareIndex'Range) of BitBoard;

   BishopRelevantBits : constant array (SquareIndex'Range) of Integer := (
      6, 5, 5, 5, 5, 5, 5, 6,
      5, 5, 5, 5, 5, 5, 5, 5,
      5, 5, 7, 7, 7, 7, 5, 5,
      5, 5, 7, 9, 9, 7, 5, 5,
      5, 5, 7, 9, 9, 7, 5, 5,
      5, 5, 7, 7, 7, 7, 5, 5,
      5, 5, 5, 5, 5, 5, 5, 5,
      6, 5, 5, 5, 5, 5, 5, 6
   );

   RookRelevantBits : constant array (SquareIndex'Range) of Integer := (
      12, 11, 11, 11, 11, 11, 11, 12,
      11, 10, 10, 10, 10, 10, 10, 11,
      11, 10, 10, 10, 10, 10, 10, 11,
      11, 10, 10, 10, 10, 10, 10, 11,
      11, 10, 10, 10, 10, 10, 10, 11,
      11, 10, 10, 10, 10, 10, 10, 11,
      11, 10, 10, 10, 10, 10, 10, 11,
      12, 11, 11, 11, 11, 11, 11, 12
   );

   BishopMagicNumbers : constant array (SquareIndex'Range) of BitBoard := (
      16#40040844404084#,   16#2004208a004208#,   16#10190041080202#,   16#108060845042010#,   16#581104180800210#,   16#2112080446200010#,   16#1080820820060210#,   16#3c0808410220200#,
      16#4050404440404#,   16#21001420088#,      16#24d0080801082102#,   16#1020a0a020400#,   16#40308200402#,      16#4011002100800#,   16#401484104104005#,   16#801010402020200#,
      16#400210c3880100#,   16#404022024108200#,   16#810018200204102#,   16#4002801a02003#,   16#85040820080400#,   16#810102c808880400#,   16#e900410884800#,   16#8002020480840102#,
      16#220200865090201#,   16#2010100a02021202#,   16#152048408022401#,   16#20080002081110#,   16#4001001021004000#,   16#800040400a011002#,   16#e4004081011002#,   16#1c004001012080#,
      16#8004200962a00220#,   16#8422100208500202#,   16#2000402200300c08#,   16#8646020080080080#,   16#80020a0200100808#,   16#2010004880111000#,   16#623000a080011400#,   16#42008c0340209202#,
      16#209188240001000#,   16#400408a884001800#,   16#110400a6080400#,   16#1840060a44020800#,   16#90080104000041#,   16#201011000808101#,   16#1a2208080504f080#,   16#8012020600211212#,
      16#500861011240000#,   16#180806108200800#,   16#4000020e01040044#,   16#300000261044000a#,   16#802241102020002#,   16#20906061210001#,   16#5a84841004010310#,   16#4010801011c04#,
      16#a010109502200#,   16#4a02012000#,      16#500201010098b028#,   16#8040002811040900#,   16#28000010020204#,   16#6000020202d0240#,   16#8918844842082200#,   16#4010011029020020#
   );

   RookMagicNumbers : constant array (SquareIndex'Range) of BitBoard := (
      16#8a80104000800020#,   16#140002000100040#,   16#2801880a0017001#,   16#100081001000420#,   16#200020010080420#,   16#3001c0002010008#,   16#8480008002000100#,   16#2080088004402900#,
      16#800098204000#,      16#2024401000200040#,   16#100802000801000#,   16#120800800801000#,   16#208808088000400#,   16#2802200800400#,   16#2200800100020080#,   16#801000060821100#,
      16#80044006422000#,   16#100808020004000#,   16#12108a0010204200#,   16#140848010000802#,   16#481828014002800#,   16#8094004002004100#,   16#4010040010010802#,   16#20008806104#,
      16#100400080208000#,   16#2040002120081000#,   16#21200680100081#,   16#20100080080080#,   16#2000a00200410#,   16#20080800400#,      16#80088400100102#,   16#80004600042881#,
      16#4040008040800020#,   16#440003000200801#,   16#4200011004500#,   16#188020010100100#,   16#14800401802800#,   16#2080040080800200#,   16#124080204001001#,   16#200046502000484#,
      16#480400080088020#,   16#1000422010034000#,   16#30200100110040#,   16#100021010009#,      16#2002080100110004#,   16#202008004008002#,   16#20020004010100#,   16#2048440040820001#,
      16#101002200408200#,   16#40802000401080#,   16#4008142004410100#,   16#2060820c0120200#,   16#1001004080100#,   16#20c020080040080#,   16#2935610830022400#,   16#44440041009200#,
      16#280001040802101#,   16#2100190040002085#,   16#80c0084100102001#,   16#4024081001000421#,   16#20030a0244872#,   16#12001008414402#,   16#2006104900a0804#,   16#1004081002402#
   );

   BishopMasks : array (SquareIndex'Range) of BitBoard;

   RookMasks : array (SquareIndex'Range) of BitBoard;

   type BishopMagicIndex is range 0 .. 511;

   type RookMagicIndex is range 0 .. 4095;

   BishopAttacks : array (SquareIndex'Range, BishopMagicIndex'Range) of BitBoard;

   RookAttacks : array (SquareIndex'Range, RookMagicIndex'Range) of BitBoard;

   procedure Initialize;

end BitBoard.Magic;